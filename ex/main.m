clc;
clear;
close all;
%%
% 开始设定建模基本参数


% 建模基本参数设置结束
%%
% CST文件初始化
cst = actxserver('CSTStudio.application');%首先载入CST应用控件
mws = invoke(cst, 'NewMWS');%新建一个MWS项目
app = invoke(mws, 'GetApplicationName');%获取当前应用名称
ver = invoke(mws, 'GetApplicationVersion');%获取当前应用版本号
invoke(mws, 'FileNew');%新建一个CST文件
path=pwd;%获取当前m文件夹路径
filename='\IShapeunitcell.cst';%新建的CST文件名字
fullname=[path filename];
%invoke(mws, 'SaveAs', fullname, 'True');%True表示保存到目前为止的结果
invoke(mws, 'DeleteResults');%删除之前的结果。注：在有结果的情况下修改模型会出现弹窗提示是否删除结果，这样运行的程序会停止，需等待手动点击弹窗使之消失
% CST文件初始化结束
%%
%在CST中存储参数
invoke(mws, 'StoreParameter','RP',8);
invoke(mws, 'StoreParameter','h',1.491);
invoke(mws, 'StoreParameter','zhu_r',0.4);
invoke(mws, 'StoreParameter','r',3.1);
invoke(mws, 'StoreParameter','k',29);
invoke(mws, 'StoreParameter','l',4.4);
invoke(mws, 'StoreParameter','r_in',0.17);
invoke(mws, 'StoreParameter','hp',1.575);
invoke(mws, 'StoreParameter','xita',90);
invoke(mws, 'StoreParameter','f',9.75);
invoke(mws, 'StoreParameter','a',1.3);
invoke(mws, 'StoreParameter','b',3.6);
%%
% 建模代码开始
Component = invoke(mws, 'Component');
invoke(Component, 'New','BanZi');
Component = invoke(mws, 'Component');
invoke(Component, 'New','KuiDian');
Component = invoke(mws, 'Component');
invoke(Component, 'New','TianXian');
Component = invoke(mws, 'Component');
invoke(Component, 'New','ZhuZi');
Material = invoke(mws, 'Material');
invoke(Material, 'Reset');
invoke(Material, 'Name','Rogers RT5880 (lossy)');
invoke(Material, 'Folder','');
invoke(Material, 'FrqType','all');
invoke(Material, 'Type','Normal');
invoke(Material, 'SetMaterialUnit','GHz','mm');
invoke(Material, 'Epsilon','2.2');
invoke(Material, 'Mue','1.0');
invoke(Material, 'Kappa','0.0');
invoke(Material, 'TanD','0.0009');
invoke(Material, 'TanDFreq','10.0');
invoke(Material, 'TanDGiven','True');
invoke(Material, 'TanDModel','ConstTanD');
invoke(Material, 'KappaM','0.0');
invoke(Material, 'TanDM','0.0');
invoke(Material, 'TanDMFreq','0.0');
invoke(Material, 'TanDMGiven','False');
invoke(Material, 'TanDMModel','ConstKappa');
invoke(Material, 'DispModelEps','None');
invoke(Material, 'DispModelMue','None');
invoke(Material, 'DispersiveFittingSchemeEps','General 1st');
invoke(Material, 'DispersiveFittingSchemeMue','General 1st');
invoke(Material, 'UseGeneralDispersionEps','False');
invoke(Material, 'UseGeneralDispersionMue','False');
invoke(Material, 'Rho','0.0');
invoke(Material, 'ThermalType','Normal');
invoke(Material, 'ThermalConductivity','0.20');
invoke(Material, 'SetActiveMaterial','all');
invoke(Material, 'Colour','0.94','0.82','0.76');
invoke(Material, 'Wireframe','False');
invoke(Material, 'Transparency','0');
invoke(Material, 'Create');
Cylinder = invoke(mws, 'Cylinder');
invoke(Cylinder, 'Reset');
invoke(Cylinder, 'Name','JieZhiBan');
invoke(Cylinder, 'Component','BanZi');
invoke(Cylinder, 'Material','Rogers RT5880 (lossy)');
invoke(Cylinder, 'OuterRadius','RP');
invoke(Cylinder, 'InnerRadius','0');
invoke(Cylinder, 'Axis','z');
invoke(Cylinder, 'Zrange','0','h');
invoke(Cylinder, 'Xcenter','45');
invoke(Cylinder, 'Ycenter','45');
invoke(Cylinder, 'Segments','0');
invoke(Cylinder, 'Create');
Cylinder = invoke(mws, 'Cylinder');
invoke(Cylinder, 'Reset');
invoke(Cylinder, 'Name','Ground');
invoke(Cylinder, 'Component','BanZi');
invoke(Cylinder, 'Material','PEC');
invoke(Cylinder, 'OuterRadius','RP');
invoke(Cylinder, 'InnerRadius','0');
invoke(Cylinder, 'Axis','z');
invoke(Cylinder, 'Zrange','-0.2','0');
invoke(Cylinder, 'Xcenter','45');
invoke(Cylinder, 'Ycenter','45');
invoke(Cylinder, 'Segments','0');
invoke(Cylinder, 'Create');
Cylinder = invoke(mws, 'Cylinder');
invoke(Cylinder, 'Reset');
invoke(Cylinder, 'Name','up');
invoke(Cylinder, 'Component','BanZi');
invoke(Cylinder, 'Material','PEC');
invoke(Cylinder, 'OuterRadius','RP');
invoke(Cylinder, 'InnerRadius','0');
invoke(Cylinder, 'Axis','z');
invoke(Cylinder, 'Zrange','h','h+0.2');
invoke(Cylinder, 'Xcenter','45');
invoke(Cylinder, 'Ycenter','45');
invoke(Cylinder, 'Segments','0');
invoke(Cylinder, 'Create');
Cylinder = invoke(mws, 'Cylinder');
invoke(Cylinder, 'Reset');
invoke(Cylinder, 'Name','zhu_yuan');
invoke(Cylinder, 'Component','ZhuZi');
invoke(Cylinder, 'Material','PEC');
invoke(Cylinder, 'OuterRadius','zhu_r');
invoke(Cylinder, 'InnerRadius','0');
invoke(Cylinder, 'Axis','z');
invoke(Cylinder, 'Zrange','0','h');
invoke(Cylinder, 'Xcenter','45');
invoke(Cylinder, 'Ycenter','45');
invoke(Cylinder, 'Segments','0');
invoke(Cylinder, 'Create');
Transform = invoke(mws, 'Transform');
invoke(Transform, 'Reset');
invoke(Transform, 'Name','ZhuZi');
invoke(Transform, 'Vector','r','0','0');
invoke(Transform, 'UsePickedPoints','False');
invoke(Transform, 'InvertPickedPoints','False');
invoke(Transform, 'MultipleObjects','False');
invoke(Transform, 'GroupObjects','False');
invoke(Transform, 'Repetitions','1');
invoke(Transform, 'MultipleSelection','False');
invoke(Transform, 'Transform','Shape','Translate');
Transform = invoke(mws, 'Transform');
invoke(Transform, 'Reset');
invoke(Transform, 'Name','ZhuZi');
invoke(Transform, 'Origin','Free');
invoke(Transform, 'Center','45','45','0');
invoke(Transform, 'Angle','0','0','360/k');
invoke(Transform, 'MultipleObjects','True');
invoke(Transform, 'GroupObjects','True');
invoke(Transform, 'Repetitions','k');
invoke(Transform, 'MultipleSelection','False');
invoke(Transform, 'Destination','');
invoke(Transform, 'Material','');
invoke(Transform, 'Transform','Shape','Rotate');
Solid = invoke(mws, 'Solid');
invoke(Solid, 'Insert','BanZi:JieZhiBan','ZhuZi:zhu_yuan');
Cylinder = invoke(mws, 'Cylinder');
invoke(Cylinder, 'Reset');
invoke(Cylinder, 'Name','TongZhou_out');
invoke(Cylinder, 'Component','KuiDian');
invoke(Cylinder, 'Material','PEC');
invoke(Cylinder, 'OuterRadius','0.5');
invoke(Cylinder, 'InnerRadius','0.4');
invoke(Cylinder, 'Axis','z');
invoke(Cylinder, 'Zrange','-1.5','-0.2');
invoke(Cylinder, 'Xcenter','45+l');
invoke(Cylinder, 'Ycenter','45');
invoke(Cylinder, 'Segments','0');
invoke(Cylinder, 'Create');
Cylinder = invoke(mws, 'Cylinder');
invoke(Cylinder, 'Reset');
invoke(Cylinder, 'Name','TongZhou_in');
invoke(Cylinder, 'Component','KuiDian');
invoke(Cylinder, 'Material','PEC');
invoke(Cylinder, 'OuterRadius','r_in');
invoke(Cylinder, 'InnerRadius','0');
invoke(Cylinder, 'Axis','z');
invoke(Cylinder, 'Zrange','-1.5','hp');
invoke(Cylinder, 'Xcenter','45+l');
invoke(Cylinder, 'Ycenter','45');
invoke(Cylinder, 'Segments','0');
invoke(Cylinder, 'Create');
Cylinder = invoke(mws, 'Cylinder');
invoke(Cylinder, 'Reset');
invoke(Cylinder, 'Name','solid1');
invoke(Cylinder, 'Component','KuiDian');
invoke(Cylinder, 'Material','Vacuum');
invoke(Cylinder, 'OuterRadius','0.4');
invoke(Cylinder, 'InnerRadius','0');
invoke(Cylinder, 'Axis','z');
invoke(Cylinder, 'Zrange','-0.2','0');
invoke(Cylinder, 'Xcenter','45+l');
invoke(Cylinder, 'Ycenter','45');
invoke(Cylinder, 'Segments','0');
invoke(Cylinder, 'Create');
Transform = invoke(mws, 'Transform');
invoke(Transform, 'Reset');
invoke(Transform, 'Name','KuiDian');
invoke(Transform, 'Origin','Free');
invoke(Transform, 'Center','45','45','0');
invoke(Transform, 'Angle','0','0','xita');
invoke(Transform, 'MultipleObjects','True');
invoke(Transform, 'GroupObjects','False');
invoke(Transform, 'Repetitions','1');
invoke(Transform, 'MultipleSelection','False');
invoke(Transform, 'Destination','');
invoke(Transform, 'Material','');
invoke(Transform, 'Transform','Shape','Rotate');
Solid = invoke(mws, 'Solid');
invoke(Solid, 'Subtract','BanZi:Ground','KuiDian:solid1');
Solid = invoke(mws, 'Solid');
invoke(Solid, 'Subtract','BanZi:Ground','KuiDian:solid1_1');
Solid = invoke(mws, 'Solid');
%invoke(Solid, 'Version 10');
invoke(Solid, 'Insert','BanZi:JieZhiBan','KuiDian:TongZhou_in');
%invoke(Solid, 'Version 1');
Solid = invoke(mws, 'Solid');
%invoke(Solid, 'Version 10');
invoke(Solid, 'Insert','BanZi:JieZhiBan','KuiDian:TongZhou_in_1');
%invoke(Solid, 'Version 1');
Pick = invoke(mws, 'Pick');
invoke(Pick, 'PickEdgeFromId','KuiDian:TongZhou_out','1','1');
Port = invoke(mws, 'Port');
invoke(Port, 'Reset');
invoke(Port, 'PortNumber','1');
invoke(Port, 'Label','');
invoke(Port, 'NumberOfModes','1');
invoke(Port, 'AdjustPolarization','False');
invoke(Port, 'PolarizationAngle','0.0');
invoke(Port, 'ReferencePlaneDistance','0');
invoke(Port, 'TextSize','50');
invoke(Port, 'Coordinates','Picks');
invoke(Port, 'Orientation','positive');
invoke(Port, 'PortOnBound','False');
invoke(Port, 'ClipPickedPortToBound','False');
invoke(Port, 'Xrange','49.5','50.5');
invoke(Port, 'Yrange','44.5','45.5');
invoke(Port, 'Zrange','-1.5','-1.5');
invoke(Port, 'XrangeAdd','0.0','0.0');
invoke(Port, 'YrangeAdd','0.0','0.0');
invoke(Port, 'ZrangeAdd','0.0','0.0');
invoke(Port, 'SingleEnded','False');
invoke(Port, 'Create');
Pick = invoke(mws, 'Pick');
invoke(Pick, 'PickEdgeFromId','KuiDian:TongZhou_out_1','1','1');
Port = invoke(mws, 'Port');
invoke(Port, 'Reset');
invoke(Port, 'PortNumber','2');
invoke(Port, 'Label','');
invoke(Port, 'NumberOfModes','1');
invoke(Port, 'AdjustPolarization','False');
invoke(Port, 'PolarizationAngle','0.0');
invoke(Port, 'ReferencePlaneDistance','0');
invoke(Port, 'TextSize','50');
invoke(Port, 'Coordinates','Picks');
invoke(Port, 'Orientation','positive');
invoke(Port, 'PortOnBound','False');
invoke(Port, 'ClipPickedPortToBound','False');
invoke(Port, 'Xrange','44.5','45.5');
invoke(Port, 'Yrange','49.5','50.5');
invoke(Port, 'Zrange','-1.5','-1.5');
invoke(Port, 'XrangeAdd','0.0','0.0');
invoke(Port, 'YrangeAdd','0.0','0.0');
invoke(Port, 'ZrangeAdd','0.0','0.0');
invoke(Port, 'SingleEnded','False');
invoke(Port, 'Create');
Solver = invoke(mws, 'Solver');
invoke(Solver, 'ResetExcitationModes');
invoke(Solver, 'SimultaneousExcitation','True');
invoke(Solver, 'SetSimultaneousExcitAutoLabel','True');
invoke(Solver, 'SetSimultaneousExcitationLabel','1[1.0,0.0]+2[1.0,90],[10]');
invoke(Solver, 'SetSimultaneousExcitationOffset','Phaseshift');
invoke(Solver, 'PhaseRefFrequency','10');
invoke(Solver, 'ExcitationPortMode','1','1','1.0','0.0','default','True');
invoke(Solver, 'ExcitationPortMode','2','1','1.0','90','default','True');
Mesh = invoke(mws, 'Mesh');
invoke(Mesh, 'SetCreator','High Frequency');
Solver = invoke(mws, 'Solver');
invoke(Solver, 'Method','Hexahedral');
invoke(Solver, 'CalculationType','TD-S');
invoke(Solver, 'StimulationPort','All');
invoke(Solver, 'StimulationMode','All');
invoke(Solver, 'SteadyStateLimit','-30.0');
invoke(Solver, 'MeshAdaption','False');
invoke(Solver, 'AutoNormImpedance','False');
invoke(Solver, 'NormingImpedance','50');
invoke(Solver, 'CalculateModesOnly','False');
invoke(Solver, 'SParaSymmetry','False');
invoke(Solver, 'StoreTDResultsInCache','False');
invoke(Solver, 'FullDeembedding','False');
invoke(Solver, 'SuperimposePLWExcitation','False');
invoke(Solver, 'UseSensitivityAnalysis','False');
Solver = invoke(mws, 'Solver');
invoke(Solver, 'ResetExcitationModes');
invoke(Solver, 'SimultaneousExcitation','True');
invoke(Solver, 'SetSimultaneousExcitAutoLabel','True');
invoke(Solver, 'SetSimultaneousExcitationLabel','1[1.0,0.0]+2[1.0,90],[10]');
invoke(Solver, 'SetSimultaneousExcitationOffset','Phaseshift');
invoke(Solver, 'PhaseRefFrequency','10');
invoke(Solver, 'ExcitationPortMode','1','1','1.0','0.0','default','True');
invoke(Solver, 'ExcitationPortMode','2','1','1.0','90','default','True');
Mesh = invoke(mws, 'Mesh');
invoke(Mesh, 'SetCreator','High Frequency');
Solver = invoke(mws, 'Solver');
invoke(Solver, 'Method','Hexahedral');
invoke(Solver, 'CalculationType','TD-S');
invoke(Solver, 'StimulationPort','Selected');
invoke(Solver, 'StimulationMode','All');
invoke(Solver, 'SteadyStateLimit','-30.0');
invoke(Solver, 'MeshAdaption','False');
invoke(Solver, 'AutoNormImpedance','False');
invoke(Solver, 'NormingImpedance','50');
invoke(Solver, 'CalculateModesOnly','False');
invoke(Solver, 'SParaSymmetry','False');
invoke(Solver, 'StoreTDResultsInCache','False');
invoke(Solver, 'FullDeembedding','False');
invoke(Solver, 'SuperimposePLWExcitation','False');
invoke(Solver, 'UseSensitivityAnalysis','False');
Monitor = invoke(mws, 'Monitor');
invoke(Monitor, 'Delete','farfield (f=8)');
Monitor = invoke(mws, 'Monitor');
invoke(Monitor, 'Reset');
invoke(Monitor, 'Name','farfield (f=f)');
invoke(Monitor, 'Domain','Frequency');
invoke(Monitor, 'FieldType','Farfield');
invoke(Monitor, 'Frequency','f');
invoke(Monitor, 'UseSubvolume','False');
invoke(Monitor, 'ExportFarfieldSource','False');
invoke(Monitor, 'SetSubvolume','0.0','0.0','0.0','0.0','0.0','0.0');
invoke(Monitor, 'Create');
Monitor = invoke(mws, 'Monitor');
invoke(Monitor, 'Delete','e-field (f=8)');
Monitor = invoke(mws, 'Monitor');
invoke(Monitor, 'Reset');
invoke(Monitor, 'Name','e-field (f=f)');
invoke(Monitor, 'Dimension','Volume');
invoke(Monitor, 'Domain','Frequency');
invoke(Monitor, 'FieldType','Efield');
invoke(Monitor, 'Frequency','f');
invoke(Monitor, 'UseSubvolume','False');
invoke(Monitor, 'SetSubvolume','0.0','0.0','0.0','0.0','0.0','0.0');
invoke(Monitor, 'Create');
Monitor = invoke(mws, 'Monitor');
invoke(Monitor, 'Delete','h-field (f=8)');
Monitor = invoke(mws, 'Monitor');
invoke(Monitor, 'Reset');
invoke(Monitor, 'Name','h-field (f=f)');
invoke(Monitor, 'Dimension','Volume');
invoke(Monitor, 'Domain','Frequency');
invoke(Monitor, 'FieldType','Hfield');
invoke(Monitor, 'Frequency','f');
invoke(Monitor, 'UseSubvolume','False');
invoke(Monitor, 'SetSubvolume','0.0','0.0','0.0','0.0','0.0','0.0');
invoke(Monitor, 'Create');
Monitor = invoke(mws, 'Monitor');
invoke(Monitor, 'Delete','power (f=8)');
Monitor = invoke(mws, 'Monitor');
invoke(Monitor, 'Reset');
invoke(Monitor, 'Name','power (f=f)');
invoke(Monitor, 'Dimension','Volume');
invoke(Monitor, 'Domain','Frequency');
invoke(Monitor, 'FieldType','Powerflow');
invoke(Monitor, 'Frequency','f');
invoke(Monitor, 'Create');
Monitor = invoke(mws, 'Monitor');
invoke(Monitor, 'Delete','loss (f=8)');
Monitor = invoke(mws, 'Monitor');
invoke(Monitor, 'Reset');
invoke(Monitor, 'Name','loss (f=f)');
invoke(Monitor, 'Dimension','Volume');
invoke(Monitor, 'Domain','Frequency');
invoke(Monitor, 'FieldType','Powerloss');
invoke(Monitor, 'Frequency','f');
invoke(Monitor, 'Create');
Mesh = invoke(mws, 'Mesh');
invoke(Mesh, 'MeshType','PBA');
invoke(Mesh, 'SetCreator','High Frequency');
MeshSettings = invoke(mws, 'MeshSettings');
invoke(MeshSettings, 'SetMeshType','Hex');
%invoke(MeshSettings, 'Set','Version',', 1');
invoke(MeshSettings, 'Set','StepsPerWaveNear','20');
invoke(MeshSettings, 'Set','StepsPerWaveFar','20');
invoke(MeshSettings, 'Set','WavelengthRefinementSameAsNear','1');
invoke(MeshSettings, 'Set','StepsPerBoxNear','20');
invoke(MeshSettings, 'Set','StepsPerBoxFar','1');
invoke(MeshSettings, 'Set','MaxStepNear','0');
invoke(MeshSettings, 'Set','MaxStepFar','0');
invoke(MeshSettings, 'Set','ModelBoxDescrNear','maxedge');
invoke(MeshSettings, 'Set','ModelBoxDescrFar','maxedge');
invoke(MeshSettings, 'Set','UseMaxStepAbsolute','0');
invoke(MeshSettings, 'Set','GeometryRefinementSameAsNear','0');
invoke(MeshSettings, 'Set','UseRatioLimitGeometry','1');
invoke(MeshSettings, 'Set','RatioLimitGeometry','20');
invoke(MeshSettings, 'Set','MinStepGeometryX','0');
invoke(MeshSettings, 'Set','MinStepGeometryY','0');
invoke(MeshSettings, 'Set','MinStepGeometryZ','0');
invoke(MeshSettings, 'Set','UseSameMinStepGeometryXYZ','1');
MeshSettings = invoke(mws, 'MeshSettings');
invoke(MeshSettings, 'SetMeshType','Hex');
invoke(MeshSettings, 'Set','FaceRefinementOn','0');
invoke(MeshSettings, 'Set','FaceRefinementPolicy','2');
invoke(MeshSettings, 'Set','FaceRefinementRatio','2');
invoke(MeshSettings, 'Set','FaceRefinementStep','0');
invoke(MeshSettings, 'Set','FaceRefinementNSteps','2');
invoke(MeshSettings, 'Set','EllipseRefinementOn','0');
invoke(MeshSettings, 'Set','EllipseRefinementPolicy','2');
invoke(MeshSettings, 'Set','EllipseRefinementRatio','2');
invoke(MeshSettings, 'Set','EllipseRefinementStep','0');
invoke(MeshSettings, 'Set','EllipseRefinementNSteps','2');
invoke(MeshSettings, 'Set','FaceRefinementBufferLines','3');
invoke(MeshSettings, 'Set','EdgeRefinementOn','1');
invoke(MeshSettings, 'Set','EdgeRefinementPolicy','1');
invoke(MeshSettings, 'Set','EdgeRefinementRatio','2');
invoke(MeshSettings, 'Set','EdgeRefinementStep','0');
invoke(MeshSettings, 'Set','EdgeRefinementBufferLines','3');
invoke(MeshSettings, 'Set','RefineEdgeMaterialGlobal','0');
invoke(MeshSettings, 'Set','RefineAxialEdgeGlobal','0');
invoke(MeshSettings, 'Set','BufferLinesNear','3');
invoke(MeshSettings, 'Set','UseDielectrics','1');
invoke(MeshSettings, 'Set','EquilibrateOn','0');
invoke(MeshSettings, 'Set','Equilibrate','1.5');
invoke(MeshSettings, 'Set','IgnoreThinPanelMaterial','0');
MeshSettings = invoke(mws, 'MeshSettings');
invoke(MeshSettings, 'SetMeshType','Hex');
invoke(MeshSettings, 'Set','SnapToAxialEdges','1');
invoke(MeshSettings, 'Set','SnapToPlanes','1');
invoke(MeshSettings, 'Set','SnapToSpheres','1');
invoke(MeshSettings, 'Set','SnapToEllipses','1');
invoke(MeshSettings, 'Set','SnapToCylinders','1');
invoke(MeshSettings, 'Set','SnapToCylinderCenters','1');
invoke(MeshSettings, 'Set','SnapToEllipseCenters','1');
Discretizer = invoke(mws, 'Discretizer');
invoke(Discretizer, 'MeshType','PBA');
invoke(Discretizer, 'PBAType','Fast PBA');
invoke(Discretizer, 'AutomaticPBAType','True');
invoke(Discretizer, 'FPBAAccuracyEnhancement','enable');
invoke(Discretizer, 'ConnectivityCheck','False');
invoke(Discretizer, 'ConvertGeometryDataAfterMeshing','True');
invoke(Discretizer, 'UsePecEdgeModel','True');
invoke(Discretizer, 'GapDetection','False');
invoke(Discretizer, 'FPBAGapTolerance','1e-3');
invoke(Discretizer, 'SetMaxParallelMesherThreads','Hex','12');
invoke(Discretizer, 'SetParallelMesherMode','Hex','None');
invoke(Discretizer, 'PointAccEnhancement','0');
invoke(Discretizer, 'UseSplitComponents','True');
invoke(Discretizer, 'EnableSubgridding','False');
invoke(Discretizer, 'PBAFillLimit','99');
invoke(Discretizer, 'AlwaysExcludePec','False');
FarfieldPlot = invoke(mws, 'FarfieldPlot');
invoke(FarfieldPlot, 'Plottype','Cartesian');
invoke(FarfieldPlot, 'Vary','angle2');
invoke(FarfieldPlot, 'Theta','30');
invoke(FarfieldPlot, 'Phi','30');
invoke(FarfieldPlot, 'Step','1');
invoke(FarfieldPlot, 'Step2','1');
invoke(FarfieldPlot, 'SetLockSteps','True');
invoke(FarfieldPlot, 'SetPlotRangeOnly','False');
invoke(FarfieldPlot, 'SetThetaStart','0');
invoke(FarfieldPlot, 'SetThetaEnd','180');
invoke(FarfieldPlot, 'SetPhiStart','0');
invoke(FarfieldPlot, 'SetPhiEnd','360');
invoke(FarfieldPlot, 'SetTheta360','False');
invoke(FarfieldPlot, 'SymmetricRange','False');
invoke(FarfieldPlot, 'SetTimeDomainFF','False');
invoke(FarfieldPlot, 'SetFrequency','-1');
invoke(FarfieldPlot, 'SetTime','0');
invoke(FarfieldPlot, 'SetColorByValue','True');
invoke(FarfieldPlot, 'DrawStepLines','False');
invoke(FarfieldPlot, 'DrawIsoLongitudeLatitudeLines','False');
invoke(FarfieldPlot, 'ShowStructure','False');
invoke(FarfieldPlot, 'SetStructureTransparent','False');
invoke(FarfieldPlot, 'SetFarfieldTransparent','False');
invoke(FarfieldPlot, 'SetSpecials','enablepolarextralines');
invoke(FarfieldPlot, 'SetPlotMode','Directivity');
invoke(FarfieldPlot, 'Distance','1');
invoke(FarfieldPlot, 'UseFarfieldApproximation','True');
invoke(FarfieldPlot, 'SetScaleLinear','False');
invoke(FarfieldPlot, 'SetLogRange','40');
invoke(FarfieldPlot, 'SetLogNorm','0');
invoke(FarfieldPlot, 'DBUnit','0');
invoke(FarfieldPlot, 'EnableFixPlotMaximum','False');
invoke(FarfieldPlot, 'SetFixPlotMaximumValue','1');
invoke(FarfieldPlot, 'SetInverseAxialRatio','False');
invoke(FarfieldPlot, 'SetAxesType','user');
invoke(FarfieldPlot, 'SetAntennaType','unknown');
invoke(FarfieldPlot, 'Phistart','1.000000e+000','0.000000e+000','0.000000e+000');
invoke(FarfieldPlot, 'Thetastart','0.000000e+000','0.000000e+000','1.000000e+000');
invoke(FarfieldPlot, 'PolarizationVector','0.000000e+000','1.000000e+000','0.000000e+000');
invoke(FarfieldPlot, 'SetCoordinateSystemType','spherical');
invoke(FarfieldPlot, 'SetAutomaticCoordinateSystem','True');
invoke(FarfieldPlot, 'SetPolarizationType','Linear');
invoke(FarfieldPlot, 'SlantAngle','0#');
invoke(FarfieldPlot, 'Origin','bbox');
invoke(FarfieldPlot, 'Userorigin','0.000000e+000','0.000000e+000','0.000000e+000');
invoke(FarfieldPlot, 'SetUserDecouplingPlane','False');
invoke(FarfieldPlot, 'UseDecouplingPlane','False');
invoke(FarfieldPlot, 'DecouplingPlaneAxis','X');
invoke(FarfieldPlot, 'DecouplingPlanePosition','0.000000e+000');
invoke(FarfieldPlot, 'LossyGround','False');
invoke(FarfieldPlot, 'GroundEpsilon','1');
invoke(FarfieldPlot, 'GroundKappa','0');
invoke(FarfieldPlot, 'EnablePhaseCenterCalculation','False');
invoke(FarfieldPlot, 'SetPhaseCenterAngularLimit','3.000000e+001');
invoke(FarfieldPlot, 'SetPhaseCenterComponent','boresight');
invoke(FarfieldPlot, 'SetPhaseCenterPlane','both');
invoke(FarfieldPlot, 'ShowPhaseCenter','True');
invoke(FarfieldPlot, 'StoreSettings');
Plot = invoke(mws, 'Plot');
invoke(Plot, 'DrawWorkplane','false');
Plot = invoke(mws, 'Plot');
invoke(Plot, 'DrawBox','False');
Plot = invoke(mws, 'Plot');
invoke(Plot, 'DrawWorkplane','true');
FarfieldPlot = invoke(mws, 'FarfieldPlot');
invoke(FarfieldPlot, 'Plottype','Polar');
invoke(FarfieldPlot, 'Vary','angle1');
invoke(FarfieldPlot, 'Theta','240');
invoke(FarfieldPlot, 'Phi','240');
invoke(FarfieldPlot, 'Step','1');
invoke(FarfieldPlot, 'Step2','1');
invoke(FarfieldPlot, 'SetLockSteps','True');
invoke(FarfieldPlot, 'SetPlotRangeOnly','False');
invoke(FarfieldPlot, 'SetThetaStart','0');
invoke(FarfieldPlot, 'SetThetaEnd','180');
invoke(FarfieldPlot, 'SetPhiStart','0');
invoke(FarfieldPlot, 'SetPhiEnd','360');
invoke(FarfieldPlot, 'SetTheta360','False');
invoke(FarfieldPlot, 'SymmetricRange','False');
invoke(FarfieldPlot, 'SetTimeDomainFF','False');
invoke(FarfieldPlot, 'SetFrequency','-1');
invoke(FarfieldPlot, 'SetTime','0');
invoke(FarfieldPlot, 'SetColorByValue','True');
invoke(FarfieldPlot, 'DrawStepLines','False');
invoke(FarfieldPlot, 'DrawIsoLongitudeLatitudeLines','False');
invoke(FarfieldPlot, 'ShowStructure','False');
invoke(FarfieldPlot, 'SetStructureTransparent','False');
invoke(FarfieldPlot, 'SetFarfieldTransparent','False');
invoke(FarfieldPlot, 'SetSpecials','enablepolarextralines');
invoke(FarfieldPlot, 'SetPlotMode','Directivity');
invoke(FarfieldPlot, 'Distance','1');
invoke(FarfieldPlot, 'UseFarfieldApproximation','True');
invoke(FarfieldPlot, 'SetScaleLinear','False');
invoke(FarfieldPlot, 'SetLogRange','40');
invoke(FarfieldPlot, 'SetLogNorm','0');
invoke(FarfieldPlot, 'DBUnit','0');
invoke(FarfieldPlot, 'EnableFixPlotMaximum','False');
invoke(FarfieldPlot, 'SetFixPlotMaximumValue','1');
invoke(FarfieldPlot, 'SetInverseAxialRatio','False');
invoke(FarfieldPlot, 'SetAxesType','user');
invoke(FarfieldPlot, 'SetAntennaType','unknown');
invoke(FarfieldPlot, 'Phistart','1.000000e+000','0.000000e+000','0.000000e+000');
invoke(FarfieldPlot, 'Thetastart','0.000000e+000','0.000000e+000','1.000000e+000');
invoke(FarfieldPlot, 'PolarizationVector','0.000000e+000','1.000000e+000','0.000000e+000');
invoke(FarfieldPlot, 'SetCoordinateSystemType','spherical');
invoke(FarfieldPlot, 'SetAutomaticCoordinateSystem','True');
invoke(FarfieldPlot, 'SetPolarizationType','Linear');
invoke(FarfieldPlot, 'SlantAngle', '0#');
invoke(FarfieldPlot, 'Origin','bbox');
invoke(FarfieldPlot, 'Userorigin','0.000000e+000','0.000000e+000','0.000000e+000');
invoke(FarfieldPlot, 'SetUserDecouplingPlane','False');
invoke(FarfieldPlot, 'UseDecouplingPlane','False');
invoke(FarfieldPlot, 'DecouplingPlaneAxis','X');
invoke(FarfieldPlot, 'DecouplingPlanePosition','0.000000e+000');
invoke(FarfieldPlot, 'LossyGround','False');
invoke(FarfieldPlot, 'GroundEpsilon','1');
invoke(FarfieldPlot, 'GroundKappa','0');
invoke(FarfieldPlot, 'EnablePhaseCenterCalculation','False');
invoke(FarfieldPlot, 'SetPhaseCenterAngularLimit','3.000000e+001');
invoke(FarfieldPlot, 'SetPhaseCenterComponent','boresight');
invoke(FarfieldPlot, 'SetPhaseCenterPlane','both');
invoke(FarfieldPlot, 'ShowPhaseCenter','True');
invoke(FarfieldPlot, 'StoreSettings');
Monitor = invoke(mws, 'Monitor');
invoke(Monitor, 'Delete','farfield (f=10)');
Monitor = invoke(mws, 'Monitor');
invoke(Monitor, 'Delete','farfield (f=12)');
FarfieldPlot = invoke(mws, 'FarfieldPlot');
invoke(FarfieldPlot, 'Plottype','Polar');
invoke(FarfieldPlot, 'Vary','angle1');
invoke(FarfieldPlot, 'Theta','180');
invoke(FarfieldPlot, 'Phi','180');
invoke(FarfieldPlot, 'Step','1');
invoke(FarfieldPlot, 'Step2','1');
invoke(FarfieldPlot, 'SetLockSteps','True');
invoke(FarfieldPlot, 'SetPlotRangeOnly','False');
invoke(FarfieldPlot, 'SetThetaStart','0');
invoke(FarfieldPlot, 'SetThetaEnd','180');
invoke(FarfieldPlot, 'SetPhiStart','0');
invoke(FarfieldPlot, 'SetPhiEnd','360');
invoke(FarfieldPlot, 'SetTheta360','False');
invoke(FarfieldPlot, 'SymmetricRange','False');
invoke(FarfieldPlot, 'SetTimeDomainFF','False');
invoke(FarfieldPlot, 'SetFrequency','-1');
invoke(FarfieldPlot, 'SetTime','0');
invoke(FarfieldPlot, 'SetColorByValue','True');
invoke(FarfieldPlot, 'DrawStepLines','False');
invoke(FarfieldPlot, 'DrawIsoLongitudeLatitudeLines','False');
invoke(FarfieldPlot, 'ShowStructure','False');
invoke(FarfieldPlot, 'SetStructureTransparent','False');
invoke(FarfieldPlot, 'SetFarfieldTransparent','False');
invoke(FarfieldPlot, 'SetSpecials','enablepolarextralines');
invoke(FarfieldPlot, 'SetPlotMode','Gain');
invoke(FarfieldPlot, 'Distance','1');
invoke(FarfieldPlot, 'UseFarfieldApproximation','True');
invoke(FarfieldPlot, 'SetScaleLinear','False');
invoke(FarfieldPlot, 'SetLogRange','40');
invoke(FarfieldPlot, 'SetLogNorm','0');
invoke(FarfieldPlot, 'DBUnit','0');
invoke(FarfieldPlot, 'EnableFixPlotMaximum','False');
invoke(FarfieldPlot, 'SetFixPlotMaximumValue','1');
invoke(FarfieldPlot, 'SetInverseAxialRatio','False');
invoke(FarfieldPlot, 'SetAxesType','user');
invoke(FarfieldPlot, 'SetAntennaType','unknown');
invoke(FarfieldPlot, 'Phistart','1.000000e+000','0.000000e+000','0.000000e+000');
invoke(FarfieldPlot, 'Thetastart','0.000000e+000','0.000000e+000','1.000000e+000');
invoke(FarfieldPlot, 'PolarizationVector','0.000000e+000','1.000000e+000','0.000000e+000');
invoke(FarfieldPlot, 'SetCoordinateSystemType','spherical');
invoke(FarfieldPlot, 'SetAutomaticCoordinateSystem','True');
invoke(FarfieldPlot, 'SetPolarizationType','Linear');
invoke(FarfieldPlot, 'SlantAngle', '0#');
invoke(FarfieldPlot, 'Origin','bbox');
invoke(FarfieldPlot, 'Userorigin','0.000000e+000','0.000000e+000','0.000000e+000');
invoke(FarfieldPlot, 'SetUserDecouplingPlane','False');
invoke(FarfieldPlot, 'UseDecouplingPlane','False');
invoke(FarfieldPlot, 'DecouplingPlaneAxis','X');
invoke(FarfieldPlot, 'DecouplingPlanePosition','0.000000e+000');
invoke(FarfieldPlot, 'LossyGround','False');
invoke(FarfieldPlot, 'GroundEpsilon','1');
invoke(FarfieldPlot, 'GroundKappa','0');
invoke(FarfieldPlot, 'EnablePhaseCenterCalculation','False');
invoke(FarfieldPlot, 'SetPhaseCenterAngularLimit','3.000000e+001');
invoke(FarfieldPlot, 'SetPhaseCenterComponent','boresight');
invoke(FarfieldPlot, 'SetPhaseCenterPlane','both');
invoke(FarfieldPlot, 'ShowPhaseCenter','True');
invoke(FarfieldPlot, 'StoreSettings');
Material = invoke(mws, 'Material');
invoke(Material, 'Reset');
invoke(Material, 'Name','Rogers RT6035HTC (loss free)');
invoke(Material, 'Folder','');
invoke(Material, 'FrqType','all');
invoke(Material, 'Type','Normal');
invoke(Material, 'SetMaterialUnit','GHz','mm');
invoke(Material, 'Epsilon','3.5');
invoke(Material, 'Mue','1.0');
invoke(Material, 'Kappa','0.0');
invoke(Material, 'TanD','0.0');
invoke(Material, 'TanDFreq','0.0');
invoke(Material, 'TanDGiven','False');
invoke(Material, 'TanDModel','ConstTanD');
invoke(Material, 'KappaM','0.0');
invoke(Material, 'TanDM','0.0');
invoke(Material, 'TanDMFreq','0.0');
invoke(Material, 'TanDMGiven','False');
invoke(Material, 'TanDMModel','ConstKappa');
invoke(Material, 'DispModelEps','None');
invoke(Material, 'DispModelMue','None');
invoke(Material, 'DispersiveFittingSchemeEps','General 1st');
invoke(Material, 'DispersiveFittingSchemeMue','General 1st');
invoke(Material, 'UseGeneralDispersionEps','False');
invoke(Material, 'UseGeneralDispersionMue','False');
invoke(Material, 'Rho','0.0');
invoke(Material, 'ThermalType','Normal');
invoke(Material, 'ThermalConductivity','0.60');
invoke(Material, 'SetActiveMaterial','all');
invoke(Material, 'Colour','0.75','0.95','0.85');
invoke(Material, 'Wireframe','False');
invoke(Material, 'Transparency','0');
invoke(Material, 'Create');
Solid = invoke(mws, 'Solid');
invoke(Solid, 'ChangeMaterial','BanZi:JieZhiBan','Rogers RT6035HTC (loss free)');
Cylinder = invoke(mws, 'Cylinder');
invoke(Cylinder, 'Reset');
invoke(Cylinder, 'Name','solid1');
invoke(Cylinder, 'Component','KuiDian');
invoke(Cylinder, 'Material','Vacuum');
invoke(Cylinder, 'OuterRadius','0.5');
invoke(Cylinder, 'InnerRadius','0');
invoke(Cylinder, 'Axis','z');
invoke(Cylinder, 'Zrange','-1','0');
invoke(Cylinder, 'Xcenter','45');
invoke(Cylinder, 'Ycenter','45');
invoke(Cylinder, 'Segments','0');
invoke(Cylinder, 'Create');
Transform = invoke(mws, 'Transform');
invoke(Transform, 'Reset');
invoke(Transform, 'Name','KuiDian:solid1');
invoke(Transform, 'Vector','0','-l','0');
invoke(Transform, 'UsePickedPoints','False');
invoke(Transform, 'InvertPickedPoints','False');
invoke(Transform, 'MultipleObjects','False');
invoke(Transform, 'GroupObjects','False');
invoke(Transform, 'Repetitions','1');
invoke(Transform, 'MultipleSelection','False');
invoke(Transform, 'Transform','Shape','Translate');
Transform = invoke(mws, 'Transform');
invoke(Transform, 'Reset');
invoke(Transform, 'Name','KuiDian:solid1');
invoke(Transform, 'Origin','Free');
invoke(Transform, 'Center','45','45','0');
invoke(Transform, 'Angle','0','0','-90');
invoke(Transform, 'MultipleObjects','True');
invoke(Transform, 'GroupObjects','False');
invoke(Transform, 'Repetitions','1');
invoke(Transform, 'MultipleSelection','False');
invoke(Transform, 'Destination','');
invoke(Transform, 'Material','');
invoke(Transform, 'Transform','Shape','Rotate');
Solid = invoke(mws, 'Solid');
invoke(Solid, 'Subtract','BanZi:Ground','KuiDian:solid1');
Solid = invoke(mws, 'Solid');
invoke(Solid, 'Subtract','BanZi:Ground','KuiDian:solid1_1');
Transform = invoke(mws, 'Transform');
invoke(Transform, 'Reset');
invoke(Transform, 'Name','KuiDian');
invoke(Transform, 'Origin','Free');
invoke(Transform, 'Center','45','45','0');
invoke(Transform, 'Angle','0','0','180');
invoke(Transform, 'MultipleObjects','True');
invoke(Transform, 'GroupObjects','False');
invoke(Transform, 'Repetitions','1');
invoke(Transform, 'MultipleSelection','False');
invoke(Transform, 'Destination','');
invoke(Transform, 'Material','');
invoke(Transform, 'Transform','Shape','Rotate');
Pick = invoke(mws, 'Pick');
invoke(Pick, 'PickEdgeFromId','KuiDian:TongZhou_out_2','1','1');
Port = invoke(mws, 'Port');
invoke(Port, 'Reset');
invoke(Port, 'PortNumber','3');
invoke(Port, 'Label','');
invoke(Port, 'NumberOfModes','1');
invoke(Port, 'AdjustPolarization','False');
invoke(Port, 'PolarizationAngle','0.0');
invoke(Port, 'ReferencePlaneDistance','0');
invoke(Port, 'TextSize','50');
invoke(Port, 'Coordinates','Picks');
invoke(Port, 'Orientation','positive');
invoke(Port, 'PortOnBound','False');
invoke(Port, 'ClipPickedPortToBound','False');
invoke(Port, 'Xrange','34','35');
invoke(Port, 'Yrange','44.5','45.5');
invoke(Port, 'Zrange','-1.5','-1.5');
invoke(Port, 'XrangeAdd','0.0','0.0');
invoke(Port, 'YrangeAdd','0.0','0.0');
invoke(Port, 'ZrangeAdd','0.0','0.0');
invoke(Port, 'SingleEnded','False');
invoke(Port, 'Create');
Pick = invoke(mws, 'Pick');
invoke(Pick, 'PickEdgeFromId','KuiDian:TongZhou_out_1_1','1','1');
Port = invoke(mws, 'Port');
invoke(Port, 'Reset');
invoke(Port, 'PortNumber','4');
invoke(Port, 'Label','');
invoke(Port, 'NumberOfModes','1');
invoke(Port, 'AdjustPolarization','False');
invoke(Port, 'PolarizationAngle','0.0');
invoke(Port, 'ReferencePlaneDistance','0');
invoke(Port, 'TextSize','50');
invoke(Port, 'Coordinates','Picks');
invoke(Port, 'Orientation','positive');
invoke(Port, 'PortOnBound','False');
invoke(Port, 'ClipPickedPortToBound','False');
invoke(Port, 'Xrange','44.5','45.5');
invoke(Port, 'Yrange','34','35');
invoke(Port, 'Zrange','-1.5','-1.5');
invoke(Port, 'XrangeAdd','0.0','0.0');
invoke(Port, 'YrangeAdd','0.0','0.0');
invoke(Port, 'ZrangeAdd','0.0','0.0');
invoke(Port, 'SingleEnded','False');
invoke(Port, 'Create');
Solver = invoke(mws, 'Solver');
invoke(Solver, 'ResetExcitationModes');
invoke(Solver, 'SimultaneousExcitation','True');
invoke(Solver, 'SetSimultaneousExcitAutoLabel','True');
invoke(Solver, 'SetSimultaneousExcitationLabel','1[1.0,0.0]+2[1.0,90]+3[1.0,180]+4[1.0,270],[10]');
invoke(Solver, 'SetSimultaneousExcitationOffset','Phaseshift');
invoke(Solver, 'PhaseRefFrequency','10');
invoke(Solver, 'ExcitationPortMode','1','1','1.0','0.0','default','True');
invoke(Solver, 'ExcitationPortMode','2','1','1.0','90','default','True');
invoke(Solver, 'ExcitationPortMode','3','1','1.0','180','default','True');
invoke(Solver, 'ExcitationPortMode','4','1','1.0','270','default','True');
FarfieldPlot = invoke(mws, 'FarfieldPlot');
invoke(FarfieldPlot, 'Plottype','3D');
invoke(FarfieldPlot, 'Vary','angle1');
invoke(FarfieldPlot, 'Theta','180');
invoke(FarfieldPlot, 'Phi','180');
invoke(FarfieldPlot, 'Step','5');
invoke(FarfieldPlot, 'Step2','5');
invoke(FarfieldPlot, 'SetLockSteps','True');
invoke(FarfieldPlot, 'SetPlotRangeOnly','False');
invoke(FarfieldPlot, 'SetThetaStart','0');
invoke(FarfieldPlot, 'SetThetaEnd','180');
invoke(FarfieldPlot, 'SetPhiStart','0');
invoke(FarfieldPlot, 'SetPhiEnd','360');
invoke(FarfieldPlot, 'SetTheta360','False');
invoke(FarfieldPlot, 'SymmetricRange','False');
invoke(FarfieldPlot, 'SetTimeDomainFF','False');
invoke(FarfieldPlot, 'SetFrequency','-1');
invoke(FarfieldPlot, 'SetTime','0');
invoke(FarfieldPlot, 'SetColorByValue','True');
invoke(FarfieldPlot, 'DrawStepLines','False');
invoke(FarfieldPlot, 'DrawIsoLongitudeLatitudeLines','False');
invoke(FarfieldPlot, 'ShowStructure','False');
invoke(FarfieldPlot, 'SetStructureTransparent','False');
invoke(FarfieldPlot, 'SetFarfieldTransparent','False');
invoke(FarfieldPlot, 'SetSpecials','enablepolarextralines');
invoke(FarfieldPlot, 'SetPlotMode','Gain');
invoke(FarfieldPlot, 'Distance','1');
invoke(FarfieldPlot, 'UseFarfieldApproximation','True');
invoke(FarfieldPlot, 'SetScaleLinear','False');
invoke(FarfieldPlot, 'SetLogRange','40');
invoke(FarfieldPlot, 'SetLogNorm','0');
invoke(FarfieldPlot, 'DBUnit','0');
invoke(FarfieldPlot, 'EnableFixPlotMaximum','False');
invoke(FarfieldPlot, 'SetFixPlotMaximumValue','1');
invoke(FarfieldPlot, 'SetInverseAxialRatio','False');
invoke(FarfieldPlot, 'SetAxesType','user');
invoke(FarfieldPlot, 'SetAntennaType','unknown');
invoke(FarfieldPlot, 'Phistart','1.000000e+000','0.000000e+000','0.000000e+000');
invoke(FarfieldPlot, 'Thetastart','0.000000e+000','0.000000e+000','1.000000e+000');
invoke(FarfieldPlot, 'PolarizationVector','0.000000e+000','1.000000e+000','0.000000e+000');
invoke(FarfieldPlot, 'SetCoordinateSystemType','spherical');
invoke(FarfieldPlot, 'SetAutomaticCoordinateSystem','True');
invoke(FarfieldPlot, 'SetPolarizationType','Linear');
invoke(FarfieldPlot, 'SlantAngle', '0#');
invoke(FarfieldPlot, 'Origin','bbox');
invoke(FarfieldPlot, 'Userorigin','0.000000e+000','0.000000e+000','0.000000e+000');
invoke(FarfieldPlot, 'SetUserDecouplingPlane','False');
invoke(FarfieldPlot, 'UseDecouplingPlane','False');
invoke(FarfieldPlot, 'DecouplingPlaneAxis','X');
invoke(FarfieldPlot, 'DecouplingPlanePosition','0.000000e+000');
invoke(FarfieldPlot, 'LossyGround','False');
invoke(FarfieldPlot, 'GroundEpsilon','1');
invoke(FarfieldPlot, 'GroundKappa','0');
invoke(FarfieldPlot, 'EnablePhaseCenterCalculation','False');
invoke(FarfieldPlot, 'SetPhaseCenterAngularLimit','3.000000e+001');
invoke(FarfieldPlot, 'SetPhaseCenterComponent','boresight');
invoke(FarfieldPlot, 'SetPhaseCenterPlane','both');
invoke(FarfieldPlot, 'ShowPhaseCenter','True');
invoke(FarfieldPlot, 'StoreSettings');
ParameterSweep = invoke(mws, 'ParameterSweep');
invoke(ParameterSweep, 'SetSimulationType','Transient');
ParameterSweep = invoke(mws, 'ParameterSweep');
invoke(ParameterSweep, 'AddSequence','Sequence 1');
ParameterSweep = invoke(mws, 'ParameterSweep');
invoke(ParameterSweep, 'AddParameter_Stepwidth','Sequence 1','a','2.5','4.5','0.5');
Solid = invoke(mws, 'Solid');
invoke(Solid, 'ChangeMaterial','BanZi:JieZhiBan','Rogers RT5880 (lossy)');
FarfieldPlot = invoke(mws, 'FarfieldPlot');
invoke(FarfieldPlot, 'Plottype','3D');
invoke(FarfieldPlot, 'Vary','angle2');
invoke(FarfieldPlot, 'Theta','0');
invoke(FarfieldPlot, 'Phi','0');
invoke(FarfieldPlot, 'Step','5');
invoke(FarfieldPlot, 'Step2','5');
invoke(FarfieldPlot, 'SetLockSteps','True');
invoke(FarfieldPlot, 'SetPlotRangeOnly','False');
invoke(FarfieldPlot, 'SetThetaStart','0');
invoke(FarfieldPlot, 'SetThetaEnd','180');
invoke(FarfieldPlot, 'SetPhiStart','0');
invoke(FarfieldPlot, 'SetPhiEnd','360');
invoke(FarfieldPlot, 'SetTheta360','False');
invoke(FarfieldPlot, 'SymmetricRange','False');
invoke(FarfieldPlot, 'SetTimeDomainFF','False');
invoke(FarfieldPlot, 'SetFrequency','-1');
invoke(FarfieldPlot, 'SetTime','0');
invoke(FarfieldPlot, 'SetColorByValue','True');
invoke(FarfieldPlot, 'DrawStepLines','False');
invoke(FarfieldPlot, 'DrawIsoLongitudeLatitudeLines','False');
invoke(FarfieldPlot, 'ShowStructure','False');
invoke(FarfieldPlot, 'SetStructureTransparent','False');
invoke(FarfieldPlot, 'SetFarfieldTransparent','False');
invoke(FarfieldPlot, 'SetSpecials','enablepolarextralines');
invoke(FarfieldPlot, 'SetPlotMode','Gain');
invoke(FarfieldPlot, 'Distance','1');
invoke(FarfieldPlot, 'UseFarfieldApproximation','True');
invoke(FarfieldPlot, 'SetScaleLinear','False');
invoke(FarfieldPlot, 'SetLogRange','40');
invoke(FarfieldPlot, 'SetLogNorm','0');
invoke(FarfieldPlot, 'DBUnit','0');
invoke(FarfieldPlot, 'EnableFixPlotMaximum','False');
invoke(FarfieldPlot, 'SetFixPlotMaximumValue','1');
invoke(FarfieldPlot, 'SetInverseAxialRatio','False');
invoke(FarfieldPlot, 'SetAxesType','user');
invoke(FarfieldPlot, 'SetAntennaType','unknown');
invoke(FarfieldPlot, 'Phistart','1.000000e+000','0.000000e+000','0.000000e+000');
invoke(FarfieldPlot, 'Thetastart','0.000000e+000','0.000000e+000','1.000000e+000');
invoke(FarfieldPlot, 'PolarizationVector','0.000000e+000','1.000000e+000','0.000000e+000');
invoke(FarfieldPlot, 'SetCoordinateSystemType','spherical');
invoke(FarfieldPlot, 'SetAutomaticCoordinateSystem','True');
invoke(FarfieldPlot, 'SetPolarizationType','Linear');
invoke(FarfieldPlot, 'SlantAngle', '0#');
invoke(FarfieldPlot, 'Origin','bbox');
invoke(FarfieldPlot, 'Userorigin','0.000000e+000','0.000000e+000','0.000000e+000');
invoke(FarfieldPlot, 'SetUserDecouplingPlane','False');
invoke(FarfieldPlot, 'UseDecouplingPlane','False');
invoke(FarfieldPlot, 'DecouplingPlaneAxis','X');
invoke(FarfieldPlot, 'DecouplingPlanePosition','0.000000e+000');
invoke(FarfieldPlot, 'LossyGround','False');
invoke(FarfieldPlot, 'GroundEpsilon','1');
invoke(FarfieldPlot, 'GroundKappa','0');
invoke(FarfieldPlot, 'EnablePhaseCenterCalculation','False');
invoke(FarfieldPlot, 'SetPhaseCenterAngularLimit','3.000000e+001');
invoke(FarfieldPlot, 'SetPhaseCenterComponent','boresight');
invoke(FarfieldPlot, 'SetPhaseCenterPlane','both');
invoke(FarfieldPlot, 'ShowPhaseCenter','True');
invoke(FarfieldPlot, 'StoreSettings');


% 建模结束
%%
invoke(plot, 'ZoomToStructure');
%%端口设置，采用的方法和在CST里面选中一个面然后设置端口是一样的操作，这里完全复现
pick = invoke(mws, 'Pick');
invoke(pick, 'PickFaceFromId','Patch:F4B', '1' );
port = invoke(mws, 'Port');
invoke(port, 'Reset');
invoke(port, 'PortNumber', '1');
invoke(port, 'Label', '');
invoke(port, 'NumberOfModes', '2');
invoke(port, 'AdjustPolarization', 'False');
invoke(port, 'PolarizationAngle', '0.0');
invoke(port, 'ReferencePlaneDistance', '0');
invoke(port, 'TextSize', '50');
invoke(port, 'TextMaxLimit', '0');
invoke(port, 'Coordinates', 'Picks');
invoke(port, 'Orientation', 'positive');
invoke(port, 'PortOnBound', 'False');
invoke(port, 'ClipPickedPortToBound', 'False');
invoke(port, 'Xrange', '-P/2', '-P/2');
invoke(port, 'Yrange', '-P/2', 'P/2');
invoke(port, 'Zrange', 20, 20);
invoke(port, 'XrangeAdd', '0.0', '0.0');
invoke(port, 'YrangeAdd', 0.0, 0.0);
invoke(port, 'ZrangeAdd', -20, -20);
invoke(port, 'SingleEnded', 'False');
invoke(port, 'Create');
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%设置远场方向图的Monitor
monitor = invoke(mws, 'Monitor');
farfield_monitor = 8:0.5:10;
for i = 1:length(farfield_monitor)
     Str_name = ['Farfield (f=',num2str(farfield_monitor(i)),')'];
     invoke(monitor, 'Reset');
     invoke(monitor, 'Name', Str_name);
     invoke(monitor, 'Dimension', 'Volume');
     invoke(monitor, 'Domain', 'Frequency');
     invoke(monitor, 'FieldType', 'Farfield');
     invoke(monitor, 'Frequency', farfield_monitor(i));
     invoke(monitor, 'Create');
end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 


solver = invoke(mws, 'Solver');
export = invoke(mws, 'ASCIIExport');
plot1D = invoke(mws, 'Plot1D');


fid=fopen('S11.txt','w+');
fclose(fid);
%获取S11的文件路径，方便保存结果时用
S11path=which('S11.txt');

% invoke(solver, 'Start');%开始仿真
% result = invoke(mws, 'Result1D', 'a1(1)1(1)');
% invoke(result, 'Save', 'E:\CST-MATLAB\what.txt');

        invoke(solver, 'Start');%开始仿真
        invoke(mws, 'SelectTreeItem', '1D Results\S-Parameters\S1(1),1(1)');%选中S11参数
        invoke(plot1D, 'PlotView','magnitudedb');%设置显示曲线的单位
        invoke(plot1D, 'Plot');%绘制S11
        invoke(export, 'Reset');
        invoke(export, 'FileName', S11path);
        invoke(export, 'Execute');%执行

 


invoke(mws, 'Save');%保存
%invoke(mws, 'Quit');%退出

